{"version":3,"sources":["context/themeContext.js","hoc/withTheme.js","redux/phoneBook/phoneBookActions.js","redux/phoneBook/phoneBookOperations.js","redux/phoneBook/phoneBookSelectors.js","components/AddContactForm.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","components/ThemeSelector.js","components/Container.js","components/App.js","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["themeConfig","light","fontColor","bodybg","dark","Context","React","createContext","ThemeContext","toggleTheme","setState","state","type","config","Provider","value","this","props","children","Component","Consumer","withTheme","WrappedComponent","theme","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","axios","defaults","baseURL","headers","common","post","addContact","name","number","dispatch","phoneBookActions","then","data","catch","error","fetchContacts","get","removeContact","id","delete","getContacts","contacts","items","getFilter","filter","getLoading","loading","getError","getFilteredContacts","createSelector","contact","toLowerCase","indexOf","ContactsForm","styled","form","themeProps","InputLabel","label","FormInput","input","SubmitButton","button","AddContactForm","onAddValidContact","alert","find","element","onAddContact","handleChange","e","target","handleSubmit","preventDefault","onSubmit","htmlFor","autoComplete","onChange","mapDispatchToProps","phoneBookOperations","connect","phoneBookSelectors","ListItem","li","DeleteButton","ContactListItemWrapper","div","handleDelete","key","onClick","List","ul","ContactList","map","onDeleteContact","FilterInput","Filter","filterUpdated","ToggleLabel","span","checked","Wrapper","App","onFetchContacts","color","createReducer","PhoneBookActions","action","payload","message","combineReducers","store","configureStore","reducer","phoneBookReducer","ReactDOM","render","document","getElementById"],"mappings":"yRAEMA,EAAc,CAChBC,MAAO,CACHC,UAAW,QACXC,OAAQ,QAEZC,KAAM,CACFF,UAAW,QACXC,OAAQ,YAIVE,EAAUC,IAAMC,gBAEDC,E,2MAGjBC,YAAc,WACV,EAAKC,UAAS,SAAAC,GAAK,MAAK,CACpBC,KAAqB,SAAfD,EAAMC,KAAkB,QAAU,Y,EAIhDD,MAAQ,CACJC,KAAM,QACNH,YAAa,EAAKA,YAClBI,OAAQb,G,wEAIR,OACE,kBAACK,EAAQS,SAAT,CAAkBC,MAAOC,KAAKL,OACzBK,KAAKC,MAAMC,c,GAlBgBC,aAArBX,EACVY,SAAWf,EAAQe,SCb9B,IAUeC,EAVG,SAAAC,GACd,OAAO,SAAmBL,GACtB,OACI,kBAAC,EAAaG,SAAd,MACK,SAAAG,GAAK,OAAI,kBAACD,EAAD,iBAAsBL,EAAtB,CAA6BM,MAAOA,U,eCS/C,GACbC,kBAfwBC,YAAa,uBAgBrCC,kBAfwBD,YAAa,uBAgBrCE,gBAfsBF,YAAa,qBAgBnCG,oBAd0BH,YAAa,yBAevCI,oBAd0BJ,YAAa,yBAevCK,kBAdwBL,YAAa,uBAerCM,qBAb2BN,YAAa,0BAcxCO,qBAb2BP,YAAa,0BAcxCQ,mBAbyBR,YAAa,wBActCS,aAZmBT,YAAa,0B,iBCXlCU,IAAMC,SAASC,QAAU,2CACzBF,IAAMC,SAASE,QAAQC,OAAvB,cACE,+JACFJ,IAAMC,SAASE,QAAQE,KAAK,gBAAkB,mBAE9C,IA6Be,GAAEC,WA7BE,SAACC,EAAMC,GAAP,OAAkB,SAACC,GACpCA,EAASC,EAAiBrB,qBAE1BW,IACGK,KAAK,YAAa,CAAEE,OAAMC,WAC1BG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPH,EAASC,EAAiBnB,kBAAkBqB,OAE7CC,OAAM,SAACC,GAAD,OAAWL,EAASC,EAAiBlB,gBAAgBsB,SAqBnCC,cAlBP,kBAAM,SAACN,GAC3BA,EAASC,EAAiBjB,uBAE1BO,IACGgB,IAAI,aACJL,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAASC,EAAiBhB,oBAAoBkB,OACjEC,OAAM,SAACC,GAAD,OAAWJ,EAAiBf,kBAAkBmB,QAYbG,cATtB,SAACC,GAAD,OAAQ,SAACT,GAC7BA,EAASC,EAAiBd,wBAE1BI,IACGmB,OADH,oBACuBD,IACpBP,MAAK,kBAAMF,EAASC,EAAiBb,qBAAqBqB,OAC1DL,OAAM,SAACC,GAAD,OAAWL,EAASC,EAAiBf,kBAAkBmB,U,QC9B5DM,EAAc,SAAA5C,GAAK,OAAIA,EAAM6C,SAASC,OAEtCC,EAAY,SAAA/C,GAAK,OAAIA,EAAM6C,SAASG,QAW3B,GACXC,WAhBe,SAAAjD,GAAK,OAAIA,EAAM6C,SAASK,SAiBvCN,cACAG,YACAI,SAba,SAAAnD,GAAK,OAAIA,EAAM6C,SAASP,OAcrCc,oBAZwBC,YAAe,CAACT,EAAaG,IAAY,SAACF,EAAUG,GAC5E,MAAe,KAAXA,EACOH,EAEAA,EAASG,QAAO,SAAAM,GAAO,OAAkE,IAA9DA,EAAQvB,KAAKwB,cAAcC,QAAQR,EAAOO,sB,inBCNpF,IAAME,EAAeC,IAAOC,KAAV,KACE,SAAArD,GAAK,OAAIA,EAAMsD,WAAWrE,aAK1B,SAAAe,GAAK,OAAIA,EAAMsD,WAAWpE,UAGxCqE,EAAaH,IAAOI,MAAV,KAGP,SAAAxD,GAAK,OAAIA,EAAMsD,WAAWrE,aAG7BwE,EAAYL,IAAOM,MAAV,KAIN,SAAA1D,GAAK,OAAIA,EAAMsD,WAAWrE,aACf,SAAAe,GAAK,OAAIA,EAAMsD,WAAWpE,UAGxCyE,EAAeP,IAAOQ,OAAV,KAGT,SAAA5D,GAAK,OAAIA,EAAMsD,WAAWrE,aACf,SAAAe,GAAK,OAAIA,EAAMsD,WAAWpE,UAGxC2E,E,2MAEJnE,MAAQ,CACN+B,KAAM,GACNC,OAAQ,I,EAGVoC,kBAAoB,SAACrC,EAAMC,GAEzB,MAAa,KAATD,GAA0B,KAAXC,EACVqC,MAAM,2BAGX,EAAK/D,MAAMuC,SAASyB,MAAK,SAAAC,GAAO,OAAKA,EAAQxC,KAAKwB,gBAAkBxB,EAAKwB,iBACpEc,MAAM,oCAGf,EAAK/D,MAAMkE,aAAazC,EAAMC,I,EAGhCyC,aAAe,SAAAC,GAAM,IAAD,EACMA,EAAEC,OAAlB5C,EADU,EACVA,KAAM3B,EADI,EACJA,MAEd,EAAKL,SAAL,eAAiBgC,EAAO3B,K,EAG1BwE,aAAe,SAAAF,GACbA,EAAEG,iBAEF,EAAKT,kBAAkB,EAAKpE,MAAM+B,KAAM,EAAK/B,MAAMgC,QACnD,EAAKjC,SAAS,CAAEgC,KAAM,GAAIC,OAAQ,M,wEAKlC,IAAM9B,EAASG,KAAKC,MAAMM,MAAMV,OAAOG,KAAKC,MAAMM,MAAMX,MAExD,OACE,kBAACwD,EAAD,CAAcG,WAAY1D,EAAQ4E,SAAUzE,KAAKuE,cAC/C,kBAACf,EAAD,CAAYD,WAAY1D,EAAQ6E,QAAQ,QAAxC,QACA,kBAAChB,EAAD,CAAWH,WAAY1D,EAAQD,KAAK,OAAO8B,KAAK,OAAOW,GAAG,OAAOtC,MAAOC,KAAKL,MAAM+B,KAAMiD,aAAa,MACpGC,SAAU5E,KAAKoE,eAEjB,kBAACZ,EAAD,CAAYD,WAAY1D,EAAQ6E,QAAQ,UAAxC,UACA,kBAAChB,EAAD,CAAWH,WAAY1D,EAAQD,KAAK,MAAM8B,KAAK,SAASW,GAAG,SAAStC,MAAOC,KAAKL,MAAMgC,OACpFgD,aAAa,MACbC,SAAU5E,KAAKoE,eAEjB,kBAACR,EAAD,CAAcL,WAAY1D,EAAQD,KAAK,UAAvC,oB,GAhDqBO,aA8DvB0E,EAAqB,CACzBV,aAAc,SAACzC,EAAMC,GAAP,OAAkBmD,EAAoBrD,WAAWC,EAAMC,KAGxDoD,eARS,SAAApF,GACtB,MAAO,CAAE6C,SAAUwC,EAAmBzC,YAAY5C,MAOZkF,EAAzBE,CAA6C1E,EAAUyD,I,4WCnGtE,IAAMmB,EAAW5B,IAAO6B,GAAV,KAKRC,EAAe9B,IAAOQ,OAAV,KAGT,SAAA5D,GAAK,OAAIA,EAAMsD,WAAWrE,aACf,SAAAe,GAAK,OAAIA,EAAMsD,WAAWpE,UAGxCiG,EAAyB/B,IAAOgC,IAAV,KAyBbhF,SAnBf,YAA8E,IAApDiF,EAAmD,EAAnDA,aAAmD,IAArCrC,QAAUZ,EAA2B,EAA3BA,GAAIX,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAASpB,EAAQ,EAARA,MAEnE,OACE,kBAAC6E,EAAD,KACE,kBAACH,EAAD,CAAUM,IAAKlD,GAAKX,EAApB,KAA4BC,EAA5B,KACA,kBAACwD,EAAD,CAAc5B,WAAYhD,EAAMV,OAAOU,EAAMX,MAAO4F,QAAS,kBAAMF,EAAajD,KAAhF,c,mICpBN,IAAMoD,EAAOpC,IAAOqC,GAAV,KAMJC,E,iLAEM,IAAD,OAEP,OACE,kBAACF,EAAD,KACGzF,KAAKC,MAAM8C,oBAAoB6C,KAAI,SAAA3C,GAClC,OAAO,kBAAC,EAAD,CAAiBsC,IAAKtC,EAAQZ,GAAIY,QAASA,EAASqC,aAAc,EAAKrF,MAAM4F,0B,GAPpE1F,aA4BX4E,eAdS,SAAApF,GACtB,MAAO,CACL6C,SAAUwC,EAAmBzC,YAAY5C,GACzCgD,OAAQqC,EAAmBtC,UAAU/C,GACrCoD,oBAAqBiC,EAAmBjC,oBAAoBpD,OAIrC,SAAAiC,GACzB,MAAO,CACLiE,gBAAiB,SAACxD,GAAD,OAAQT,EAASkD,EAAoB1C,cAAcC,QAIzD0C,CAA6C1E,EAAUsF,I,sKCpCtE,IAAMG,EAAczC,IAAOM,MAAV,KAIR,SAAA1D,GAAK,OAAIA,EAAMsD,WAAWrE,aACf,SAAAe,GAAK,OAAIA,EAAMsD,WAAWpE,UAGxC4G,E,2MACJ3B,aAAe,SAAAC,GAAM,IACXtE,EAAUsE,EAAEC,OAAZvE,MAER,EAAKE,MAAM+F,cAAcjG,I,wEAIzB,OACE,kBAAC+F,EAAD,CAAavC,WAAYvD,KAAKC,MAAMM,MAAMV,OAAOG,KAAKC,MAAMM,MAAMX,MAAOA,KAAK,OAAOgF,SAAU5E,KAAKoE,aAClG1C,KAAK,SAASiD,aAAa,Y,GAVdxE,aAef0E,GAAqB,CACzBmB,cAAe,SAACrD,GAAD,OAAYd,EAAiBX,aAAayB,KAI5CoC,eAAQ,KAAMF,GAAdE,CAAkC1E,EAAU0F,I,oHC5B3D,IAAME,GAAc5C,IAAO6C,KAAV,MAmBF7F,UAff,SAAuBkD,GAErB,OACE,+BACE,kBAAC0C,GAAD,KAAc1C,EAAWhD,MAAMX,MAC/B,kBAAC,KAAD,CACEA,KAAK,WACLuG,QAAmC,SAA1B5C,EAAWhD,MAAMX,KAC1BgF,SAAU,kBAAMrB,EAAWhD,MAAMd,qB,0ICdzC,IAAM2G,GAAU/C,IAAOgC,IAAV,MAGJ,SAAApF,GAAK,OAAIA,EAAMsD,WAAWrE,aACf,SAAAe,GAAK,OAAIA,EAAMsD,WAAWpE,UAa/BkB,I,SAAAA,MAVf,YAAuC,IAAnBH,EAAkB,EAAlBA,SAAUK,EAAQ,EAARA,MAE5B,OACE,kBAAC6F,GAAD,CAAS7C,WAAYhD,EAAMV,OAAOU,EAAMX,OACrCM,M,oBCDDmG,G,4LAEFrG,KAAKC,MAAMqG,oB,+BAIX,OAEE,kBAAC,GAAD,KACGtG,KAAKC,MAAMgC,OAAS,4BAAKjC,KAAKC,MAAMgC,OACrC,kBAAC,GAAD,MACA,yCACA,kBAAC,EAAD,MACA,wCACA,kBAAC,GAAD,MACCjC,KAAKC,MAAM4C,SAAW,kBAAC,KAAD,CAAQjD,KAAK,WAAW2G,MAAM,UACnDvG,KAAKC,MAAM4C,SAAW,kBAAC,EAAD,W,GAhBd1C,aAsBZ0E,GAAqB,CACzByB,gBAAiBxB,EAAoB5C,eAWxB6C,gBARS,SAAApF,GACtB,MAAO,CACL6C,SAAUwC,EAAmBzC,YAAY5C,GACzCkD,QAASmC,EAAmBpC,WAAWjD,GACvCsC,MAAO+C,EAAmBlC,SAASnD,MAICkF,GAAzBE,CAA6C1E,EAAUgG,K,kBCtChE5D,GAAQ+D,YAAc,IAAD,qBACxBC,EAAiB5F,qBAAsB,SAAClB,EAAO+G,GAAR,OAAmBA,EAAOC,WADzC,eAExBF,EAAiB/F,mBATD,SAACf,EAAO+G,GAAR,6BACb/G,GADa,CACN+G,EAAOC,aAMO,eAGxBF,EAAiBzF,sBANE,SAACrB,EAAO+G,GAAR,OACpB/G,EAAMgD,QAAO,SAAAM,GAAO,OAAIA,EAAQZ,KAAOqE,EAAOC,cAErB,KAMrBhE,GAAS6D,YAAc,GAAD,eACzBC,EAAiBvF,cAAe,SAACvB,EAAO+G,GAAR,OAAmBA,EAAOC,YAGvD9D,GAAU2D,aAAc,GAAD,qBAC1BC,EAAiB7F,qBAAsB,kBAAM,KADnB,eAE1B6F,EAAiBjG,mBAAoB,kBAAM,KAFjB,eAG1BiG,EAAiB1F,sBAAuB,kBAAM,KAHpB,eAK1B0F,EAAiB/F,mBAAoB,kBAAM,KALjB,eAM1B+F,EAAiB5F,qBAAsB,kBAAM,KANnB,eAO1B4F,EAAiBzF,sBAAuB,kBAAM,KAPpB,eAS1ByF,EAAiB9F,iBAAkB,kBAAM,KATf,eAU1B8F,EAAiB3F,mBAAoB,kBAAM,KAVjB,eAW1B2F,EAAiBxF,oBAAqB,kBAAM,KAXlB,KAcvBgB,GAAQuE,YAAc,IAAD,qBACxBC,EAAiB7F,qBAAsB,iBAAM,MADrB,eAExB6F,EAAiBjG,mBAAoB,iBAAM,MAFnB,eAGxBiG,EAAiB1F,sBAAuB,iBAAM,MAHtB,eAKxB0F,EAAiB9F,iBAAkB,SAAChB,EAAO+G,GAAR,OAAmBA,EAAOC,QAAQC,WAL7C,eAMxBH,EAAiB3F,mBAAoB,SAACnB,EAAO+G,GAAR,OAAmBA,EAAOC,QAAQC,WAN/C,eAOxBH,EAAiBxF,oBAAqB,SAACtB,EAAO+G,GAAR,OAAmBA,EAAOC,QAAQC,WAPhD,KAUZC,8BAAgB,CAC7BpE,SACAE,UACAE,WACAZ,WCtCa6E,GAPDC,YAAe,CAC3BC,QAAS,CACPxE,SAAUyE,MCIdC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,EAAD,KACI,kBAAC,GAAD,QAEKM,SAASC,eAAe,W","file":"static/js/main.b328351b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst themeConfig = {\r\n    light: {\r\n        fontColor: \"black\",\r\n        bodybg: \"#fff\"\r\n    },\r\n    dark: {\r\n        fontColor: \"white\",\r\n        bodybg: \"#333333\"\r\n    }\r\n};\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default class ThemeContext extends Component {\r\n    static Consumer = Context.Consumer;\r\n\r\n    toggleTheme = () => {\r\n        this.setState(state => ({\r\n            type: state.type === \"dark\" ? \"light\" : \"dark\"\r\n        }));\r\n    };\r\n\r\n    state = {\r\n        type: \"light\",\r\n        toggleTheme: this.toggleTheme,\r\n        config: themeConfig\r\n    };\r\n\r\n    render() {\r\n        return (\r\n          <Context.Provider value={this.state}>\r\n              {this.props.children}\r\n          </Context.Provider>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ThemeContext from \"../context/themeContext\";\r\n\r\nconst withTheme = WrappedComponent => {\r\n    return function WithTheme(props) {\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {theme => <WrappedComponent {...props} theme={theme} />}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withTheme;","import {createAction} from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction(\"contacts/addRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\r\nconst addContactError = createAction(\"contacts/addError\");\r\n\r\nconst fetchContactRequest = createAction(\"contacts/fetchRequest\");\r\nconst fetchContactSuccess = createAction(\"contacts/fetchSuccess\");\r\nconst fetchContactError = createAction(\"contacts/fetchError\");\r\n\r\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\r\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\r\nconst removeContactError = createAction(\"contacts/removeError\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter\r\n}","import phoneBookActions from \"./phoneBookActions\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\naxios.defaults.headers.common[\"Authorization\"] =\r\n  \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZThiMTFkNWMzNWY3ODAwMTc4ZDIzZWYiLCJpYXQiOjE1ODYxNzI0MzR9.xr7BnpXeV4n8Di4cumBYZFpZNoasKPZabBQy15EG8pc\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(phoneBookActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => {\r\n      dispatch(phoneBookActions.addContactSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(phoneBookActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(phoneBookActions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(phoneBookActions.fetchContactSuccess(data)))\r\n    .catch((error) => phoneBookActions.fetchContactError(error));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(phoneBookActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(phoneBookActions.removeContactSuccess(id)))\r\n    .catch((error) => dispatch(phoneBookActions.fetchContactError(error)));\r\n};\r\n\r\nexport default { addContact, fetchContacts, removeContact };","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getError = state => state.contacts.error;\r\n\r\nconst getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n    if (filter === \"\")\r\n        return contacts;\r\n    else\r\n        return contacts.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n})\r\n\r\nexport default {\r\n    getLoading,\r\n    getContacts,\r\n    getFilter,\r\n    getError,\r\n    getFilteredContacts\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport { connect } from 'react-redux';\r\nimport phoneBookOperations from '../redux/phoneBook/phoneBookOperations';\r\nimport phoneBookSelectors from '../redux/phoneBook/phoneBookSelectors'\r\n\r\nconst ContactsForm = styled.form`\r\nborder: 2px solid ${props => props.themeProps.fontColor};\r\nmax-width: 400px;\r\npadding: 10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\nmax-width: 40%;\r\nfont-size: 20px;\r\ncolor: ${props => props.themeProps.fontColor}\r\n`;\r\n\r\nconst FormInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\nmax-width: 30%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nclass AddContactForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\n  onAddValidContact = (name, number) => {\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    if (this.props.contacts.find(element => (element.name.toLowerCase() === name.toLowerCase()))) {\r\n      return alert(\"This contact already added!\")\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.onAddValidContact(this.state.name, this.state.number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n\r\n    const config = this.props.theme.config[this.props.theme.type];\r\n\r\n    return (\r\n      <ContactsForm themeProps={config} onSubmit={this.handleSubmit}>\r\n        <InputLabel themeProps={config} htmlFor=\"name\">Name</InputLabel>\r\n        <FormInput themeProps={config} type=\"text\" name=\"name\" id=\"name\" value={this.state.name} autoComplete='off'\r\n          onChange={this.handleChange} />\r\n\r\n        <InputLabel themeProps={config} htmlFor=\"number\">Number</InputLabel>\r\n        <FormInput themeProps={config} type=\"tel\" name=\"number\" id=\"number\" value={this.state.number}\r\n          autoComplete='off'\r\n          onChange={this.handleChange} />\r\n\r\n        <SubmitButton themeProps={config} type=\"submit\">Add contact</SubmitButton>\r\n      </ContactsForm>\r\n    )\r\n  }\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { contacts: phoneBookSelectors.getContacts(state) }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: (name, number) => phoneBookOperations.addContact(name, number)\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(AddContactForm))","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst ListItem = styled.li`\r\nmargin-right: 30px;\r\nmin-width: 50%;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\nmax-width: 50%;\r\nborder-radius: 5px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nconst ContactListItemWrapper = styled.div`\r\ndisplay: flex;\r\nmargin-bottom: 10px;\r\n`;\r\n\r\n\r\nfunction ContactListItem({handleDelete, contact: {id, name, number}, theme}) {\r\n\r\n  return (\r\n    <ContactListItemWrapper>\r\n      <ListItem key={id}>{name}: {number} </ListItem>\r\n      <DeleteButton themeProps={theme.config[theme.type]} onClick={() => handleDelete(id)}>Delete</DeleteButton>\r\n    </ContactListItemWrapper>\r\n  )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  handleDelete: PropTypes.func.isRequired,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default withTheme(ContactListItem)","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport { connect } from 'react-redux';\r\nimport phoneBookOperations from '../redux/phoneBook/phoneBookOperations';\r\nimport phoneBookSelectors from '../redux/phoneBook/phoneBookSelectors';\r\n\r\nconst List = styled.ul`\r\nmax-width: 400px;\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nclass ContactList extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <List>\r\n        {this.props.getFilteredContacts.map(contact => {\r\n          return <ContactListItem key={contact.id} contact={contact} handleDelete={this.props.onDeleteContact} />\r\n        })}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: phoneBookSelectors.getContacts(state),\r\n    filter: phoneBookSelectors.getFilter(state),\r\n    getFilteredContacts: phoneBookSelectors.getFilteredContacts(state)\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: (id) => dispatch(phoneBookOperations.removeContact(id)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(ContactList));","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport { connect } from 'react-redux';\r\nimport phoneBookActions from '../redux/phoneBook/phoneBookActions';\r\n\r\nconst FilterInput = styled.input`\r\nmax-width: 40%;\r\nmargin-top: 10px;\r\nmargin-bottom: 30px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nclass Filter extends Component {\r\n  handleChange = e => {\r\n    const { value } = e.target;\r\n\r\n    this.props.filterUpdated(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <FilterInput themeProps={this.props.theme.config[this.props.theme.type]} type=\"text\" onChange={this.handleChange}\r\n        name=\"filter\" autoComplete='off' />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  filterUpdated: (filter) => phoneBookActions.changeFilter(filter),\r\n\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(withTheme(Filter));","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-toggle/style.css\";\r\nimport Toggle from 'react-toggle';\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst ToggleLabel = styled.span`\r\nmargin: 10px;\r\n`;\r\n\r\nfunction ThemeSelector(themeProps) {\r\n\r\n  return (\r\n    <label>\r\n      <ToggleLabel>{themeProps.theme.type}</ToggleLabel>\r\n      <Toggle\r\n        type=\"checkbox\"\r\n        checked={themeProps.theme.type === \"dark\"}\r\n        onChange={() => themeProps.theme.toggleTheme()}\r\n      />\r\n    </label>\r\n\r\n  );\r\n}\r\n\r\nexport default withTheme(ThemeSelector)","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport withTheme from \"../hoc/withTheme\";\r\n\r\nconst Wrapper = styled.div`\r\nmargin: 0;\r\npadding: 10px;\r\ncolor: ${props => props.themeProps.fontColor};\r\nbackground-color: ${props => props.themeProps.bodybg};\r\n`;\r\n\r\nfunction Container({children, theme}) {\r\n\r\n  return (\r\n    <Wrapper themeProps={theme.config[theme.type]}>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default withTheme(Container);","import React, { Component } from \"react\";\r\nimport AddContactForm from \"./AddContactForm\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport ThemeSelector from \"./ThemeSelector\";\r\nimport Container from \"./Container\";\r\nimport withTheme from \"../hoc/withTheme\";\r\nimport { connect } from \"react-redux\";\r\nimport phoneBookOperations from '../redux/phoneBook/phoneBookOperations';\r\nimport Loader from 'react-loader-spinner';\r\nimport phoneBookSelectors from '../redux/phoneBook/phoneBookSelectors'\r\n\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <Container>\r\n        {this.props.error && <h3>{this.props.error}</h3>}\r\n        <ThemeSelector />\r\n        <h2>PhoneBook</h2>\r\n        <AddContactForm />\r\n        <h3>Contacts</h3>\r\n        <Filter />\r\n        {this.props.loading && <Loader type=\"TailSpin\" color=\"blue\" />}\r\n        {!this.props.loading && <ContactList />}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: phoneBookOperations.fetchContacts\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: phoneBookSelectors.getContacts(state),\r\n    loading: phoneBookSelectors.getLoading(state),\r\n    error: phoneBookSelectors.getError(state)\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(App));","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport PhoneBookActions from './phoneBookActions';\r\n\r\nconst AddContact = (state, action) =>\r\n  [...state, action.payload]\r\n  ;\r\n\r\nconst removeContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [PhoneBookActions.fetchContactSuccess]: (state, action) => action.payload,\r\n  [PhoneBookActions.addContactSuccess]: AddContact,\r\n  [PhoneBookActions.removeContactSuccess]: removeContact\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [PhoneBookActions.changeFilter]: (state, action) => action.payload\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [PhoneBookActions.fetchContactRequest]: () => true,\r\n  [PhoneBookActions.addContactRequest]: () => true,\r\n  [PhoneBookActions.removeContactRequest]: () => true,\r\n\r\n  [PhoneBookActions.addContactSuccess]: () => false,\r\n  [PhoneBookActions.fetchContactSuccess]: () => false,\r\n  [PhoneBookActions.removeContactSuccess]: () => false,\r\n\r\n  [PhoneBookActions.addContactError]: () => false,\r\n  [PhoneBookActions.fetchContactError]: () => false,\r\n  [PhoneBookActions.removeContactError]: () => false\r\n});\r\n\r\nconst error = createReducer(\"\", {\r\n  [PhoneBookActions.fetchContactRequest]: () => \"\",\r\n  [PhoneBookActions.addContactRequest]: () => \"\",\r\n  [PhoneBookActions.removeContactRequest]: () => \"\",\r\n\r\n  [PhoneBookActions.addContactError]: (state, action) => action.payload.message,\r\n  [PhoneBookActions.fetchContactError]: (state, action) => action.payload.message,\r\n  [PhoneBookActions.removeContactError]: (state, action) => action.payload.message\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error\r\n});","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport phoneBookReducer from './phoneBook/phoneBookReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phoneBookReducer\r\n  }\r\n}\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\n\r\n\r\nimport ThemeContext from \"./context/themeContext\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ThemeContext>\r\n            <App />\r\n        </ThemeContext>\r\n    </Provider>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}